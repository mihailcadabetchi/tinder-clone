{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButtons.js","Chat.js","Chats.js","ChatScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","SwipeButtons","Chat","message","profilePic","timestamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","value","onChange","e","target","placeholder","type","prenventDefault","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.882b607f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport './Header.css'\r\nimport {Link, useHistory } from 'react-router-dom'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nfunction Header({backButton}) {\r\n    const history = useHistory()\r\n    return (\r\n        <div className='header'>\r\n            {backButton ? (\r\n                <IconButton onClick={() => history.replace(backButton)}>\r\n                    <ArrowBackIosIcon fontSize='large' className='back__button' />\r\n                </IconButton>\r\n            ) : (\r\n                \r\n            <IconButton>\r\n                <PersonIcon className='header__icon 'fontSize='large'/>\r\n            </IconButton>\r\n            )}\r\n            <Link to='/'>\r\n               <img \r\n               className='header__logo'\r\n               src='https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png' alt='tinder logo'/>\r\n            </Link>\r\n            <Link to='/chat'>\r\n                <IconButton>\r\n                <ForumIcon className='header__icon 'fontSize='large'/>\r\n                </IconButton>\r\n            </Link>\r\n            \r\n            \r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import firebase from 'firebase'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDEqLcnH3B7GdW1vVaAi0aGQRertgTtFOc\",\r\n    authDomain: \"tinder-clone-d3d8e.firebaseapp.com\",\r\n    databaseURL: \"https://tinder-clone-d3d8e.firebaseio.com\",\r\n    projectId: \"tinder-clone-d3d8e\",\r\n    storageBucket: \"tinder-clone-d3d8e.appspot.com\",\r\n    messagingSenderId: \"374232050744\",\r\n    appId: \"1:374232050744:web:422c2398d5cd28cb81cacd\",\r\n    measurementId: \"G-DKSX5K9XGR\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n  const db = firebaseApp.firestore()\r\n  \r\n  export default db;","import React, {useState, useEffect} from 'react'\r\nimport './TinderCards.css'\r\nimport TinderCard from 'react-tinder-card'\r\nimport db from './firebase'\r\n\r\n\r\nfunction TinderCards() {\r\n    const [people, setPeople] = useState([])\r\n      \r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('people').onSnapshot((snapshot) =>(\r\n            setPeople(snapshot.docs.map(doc => doc.data()))\r\n    \r\n        ))\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n\r\n        \r\n    }, [people])\r\n    \r\n    \r\n    return (\r\n        <div className='tinderCards'>\r\n            <div className=\"tinderCard__cardContainer\">\r\n                {people.map((person) => (\r\n                    <TinderCard\r\n                    className='swipe'\r\n                    key={person.name}\r\n                    preventSwipe={['up', 'down']}\r\n                    >\r\n                        <div \r\n                        style={{backgroundImage: `url(${person.url})`}}\r\n                        className=\"card\">\r\n                            <h3>{person.name}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards\r\n","import React from 'react'\r\nimport './SwipeButtons.css'\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className='swipeButtons'>\r\n            <IconButton className='swipeButtons__repeat'>\r\n               <ReplayIcon fontSize='large'/>\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__left'>\r\n                <CloseIcon />\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__star'>\r\n                <StarRateIcon fontSize='large'/>\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__right'>\r\n                <FavoriteIcon fontSize='large'/>\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__lightning'>\r\n                <FlashOnIcon fontSize='large'/>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","import React from 'react'\r\nimport './Chat.css'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Chat({ name, message, profilePic, timestamp }) {\r\n    return (\r\n        <Link to={`/chat/${name}` }>\r\n            <div className='chat'>\r\n                <Avatar \r\n                className='chat__image' \r\n                src={profilePic}\r\n                />\r\n                <div className='chat__details'>\r\n                    <h2>{name}</h2>\r\n                    <p>{message}</p>\r\n                </div>\r\n                <p className='chat__timestamp'>{timestamp}</p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport './Chats.css'\r\nimport Chat from './Chat'\r\n\r\nfunction Chats() {\r\n    return (\r\n        <div className='chats'>\r\n            <Chat \r\n            name='Elena'\r\n            message='ciaoo'\r\n            timestamp='23:23'\r\n            profilePic='https://th.bing.com/th/id/OIP.oaSUbQHRfcwcGecL5nyTygHaJl?w=182&h=236&c=7&o=5&dpr=1.25&pid=1.7'\r\n            message='rinsondiiiii'\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats\r\n\r\n","import { Avatar } from '@material-ui/core'\r\nimport React, {useState} from 'react'\r\nimport './ChatScreen.css'\r\n\r\nfunction ChatScreen() {\r\n    const [input, setInput] = useState('')\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            name: 'Elena',\r\n            message: 'ciao bellisimo come sta?💖💖',\r\n            image: 'https://th.bing.com/th/id/OIP.oaSUbQHRfcwcGecL5nyTygHaJl?w=182&h=236&c=7&o=5&dpr=1.25&pid=1.7'\r\n        },\r\n        \r\n    ])\r\n    const handleSend = (e) => {\r\n        e.prenventDefault()\r\n        setMessages([...messages, {message : input }])\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className='chatScreen'>\r\n            <p className='chatScreen__timestamp'>Ultima visita alle 23:59</p>\r\n            {messages.map((message) => (\r\n                message.name ? (\r\n                 <div className='chatScreen__message'>\r\n                    <Avatar \r\n                    className='chatScreen__image'\r\n                    alt={message.name}\r\n                    src={message.image}\r\n                    />\r\n                    <p className='chatScreen__text'>{message.message}</p>\r\n                </div>\r\n\r\n                ) : (\r\n                    <div className='chatScreen__message'> \r\n                        <p className='chatScreen__textUser'>{message.message}</p>\r\n                    </div>\r\n                )\r\n            ))}\r\n            <div>\r\n                <form className='chatScreen__form'>\r\n                    <input \r\n                    value={input}\r\n                    onChange={e => setInput(e.target.value)}\r\n                    className='chatScreen__input' placeholder='type something' type='text'>\r\n                    </input>\r\n                    <button \r\n                    onClick={handleSend}\r\n                    type='submit' className='input__button'>\r\n                        SEND\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatScreen\r\n","import './App.css';\nimport Header from './Header'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport TinderCards from './TinderCards'\nimport SwipeButtons from './SwipeButtons'\nimport Chats from './Chats'\nimport ChatScreen from './ChatScreen'\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path='/chat/:person'>\n            <Header backButton='/chat'/>\n            <ChatScreen />\n          </Route>\n          <Route path='/chat'>\n            <Header backButton='/'/>\n            <Chats />\n          </Route>\n          <Route path='/'>\n            <Header />\n            <TinderCards />\n            <SwipeButtons />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}